{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/tkhstudent25/Desktop/Web_Dev/react-native/cryptofyhubnative/src/screens/Landing/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FetchData from \"../../../services/FetchData\";\nexport default function LandingScreens(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setDate = _useState2[1];\n\n  var getRndom = function getRndom() {\n    var giphy;\n    return _regeneratorRuntime.async(function getRndom$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(FetchData());\n\n          case 2:\n            giphy = _context.sent;\n            setDate(giphy.data);\n            console.log(giphy.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getRndom();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Refresh Data\",\n    onPress: getRndom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, data.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: styles.Cryptocontainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \" \", item.market_cap_rank, \".\"), React.createElement(Image, {\n      style: styles.img,\n      source: {\n        uri: \"\" + item.image\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: styles.CryptocontainerHeading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, item.id), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"$\", item.current_price));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FECE46',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageStyle: {\n    width: 100,\n    height: 100\n  },\n  Cryptocontainer: {\n    backgroundColor: 'gray',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 30,\n    margin: 2,\n    borderColor: '#2a4944',\n    borderWidth: 1,\n    backgroundColor: '#d2f7f1'\n  },\n  CryptocontainerHeading: {\n    fontSize: 20\n  },\n  img: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 25,\n    width: 25\n  }\n});","map":{"version":3,"sources":["/Users/tkhstudent25/Desktop/Web_Dev/react-native/cryptofyhubnative/src/screens/Landing/index.js"],"names":["StatusBar","React","useState","useEffect","FetchData","LandingScreens","navigation","data","setDate","getRndom","giphy","console","log","styles","container","map","item","index","Cryptocontainer","market_cap_rank","img","uri","image","CryptocontainerHeading","id","current_price","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","imageStyle","width","height","flexDirection","padding","margin","borderColor","borderWidth","fontSize","display"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button, Image, ScrollView } from 'react-native';\nimport FetchData from '../../../services/FetchData';\n\nexport default function LandingScreens({ navigation }) {\n\n  const [data, setDate] = useState([]);\n\n  const getRndom = async () => {\n    const giphy = await FetchData();\n    setDate(giphy.data);\n    console.log(giphy.data);\n  };\n\n  useEffect(() => {\n    getRndom();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <Button\n        title=\"Refresh Data\"\n        onPress={getRndom}\n      />\n\n      {/* <Button \n        title=\"Go to home\"\n        onPress={()=> navigation.navigate('Home')}\n      /> */}\n\n      <ScrollView>\n        {data.map((item, index) => {\n          return (\n            <View key={index} style={styles.Cryptocontainer}>\n\n              <Text> {item.market_cap_rank}.</Text>\n              <Image\n                style={styles.img}\n                source={{ uri: `${item.image}` }}\n              />\n              <Text style={styles.CryptocontainerHeading}>{item.id}</Text>\n              <Text>${item.current_price}</Text>\n\n            </View>\n          );\n        })}\n      </ScrollView>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FECE46',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  imageStyle: {\n    width: 100,\n    height: 100,\n  },\n  Cryptocontainer: {\n    backgroundColor: 'gray',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 30,\n    margin: 2,\n    borderColor: '#2a4944',\n    borderWidth: 1,\n    backgroundColor: '#d2f7f1',\n  },\n  CryptocontainerHeading: {\n    fontSize: 20,\n  },\n  img: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 25,\n    width: 25,\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}